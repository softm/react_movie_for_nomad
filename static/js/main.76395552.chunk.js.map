{"version":3,"sources":["Movie.js","App.js","Test.js","reportWebVitals.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","PropType","number","isRequired","string","arrayOf","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","console","log","this","movie","medium_cover_image","React","Component","Test","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAIA,SAASA,EAAT,GAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC/C,OAAO,sBAAKC,UAAU,QAAf,UACL,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,gBAAd,SACGD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACV,oBAAgBL,UAAU,eAA1B,SAA0CI,GAAjCC,QAGb,oBAAGL,UAAU,iBAAb,UAA+BH,EAAQS,MAAM,EAAE,KAA/C,eAKNb,EAAMc,SAAW,CACfb,GAAGa,IAASC,OAAOC,WACnBd,KAAKY,IAASC,OAAOC,WACrBb,MAAMW,IAASG,OAAOD,WACtBZ,QAAQU,IAASG,OAAOD,WACxBX,OAAOS,IAASG,OAAOD,WACvBV,OAAOQ,IAASI,QAAQJ,IAASG,QAAQD,YAG5BhB,QC6BAmB,E,4MApDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,0CALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IACnCQ,QAAQC,IAAIR,GARF,2C,uDAWZ,WACES,KAAKR,c,oBAGP,WACEM,QAAQC,IAAI,UADL,MAEuBC,KAAKX,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OACnB,OACE,yBAASf,UAAU,YAAnB,SACGc,EACC,qBAAKd,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGA,qBAAKA,UAAU,SAAf,SACGe,EAAOZ,KAAI,SAACsB,GAEf,OADAH,QAAQC,IAAIE,GAEV,cAAC,EAAD,CAEE/B,GAAI+B,EAAM/B,GACVC,KAAM8B,EAAM9B,KACZC,MAAO6B,EAAM7B,MACbC,QAAS4B,EAAM5B,QACfC,OAAQ2B,EAAMC,mBACd3B,OAAQ0B,EAAM1B,QANT0B,EAAM/B,e,GApCTiC,IAAMC,WCATC,ICOAC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.76395552.chunk.js","sourcesContent":["import React from 'react';\nimport PropType from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({id, year, title, summary, poster,genres}){\n  return <div className=\"movie\">\n    <img src={poster} alt={title} title={title}/>\n    <div className=\"movie__data\">\n      <h3 className=\"movie__title\">{title}</h3>\n      <h5 className=\"movie__year\">{year}</h5>\n      <ul className=\"movie__genres\">\n        {genres.map((genre,index) =>(\n          <li key={index} className=\"genres_genre\">{genre}</li>\n        ))}\n      </ul>\n      <p className=\"movie__summary\">{summary.slice(0,140)}...</p>\n    </div>\n  </div>\n}\n\nMovie.PropType = {\n  id:PropType.number.isRequired,\n  year:PropType.number.isRequired,\n  title:PropType.string.isRequired,\n  summary:PropType.string.isRequired,\n  poster:PropType.string.isRequired,\n  genres:PropType.arrayOf(PropType.string).isRequired\n}\n\nexport default Movie;\n","import \"./App.css\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\"https://yts.mx/api/v2/list_movies.json\");\n    //this.setState({movies:movies});\n    this.setState({ movies, isLoading: false });\n    console.log(movies);\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    console.log(\"render\");\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n            <div className=\"movies\">\n              {movies.map((movie) => {\n            console.log(movie);\n            return (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            );\n          })}\n            </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nfunction Test(){\n    return <h3>My name is Test</h3>;\n}\nexport default Test;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Test from './Test';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}